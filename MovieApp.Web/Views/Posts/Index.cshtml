@model PostsViewModel
@inject ISidebarService SidebarService

@section Styles {
	<link rel="stylesheet" href="~/css/posts.css" />
}
@{
	Layout = "_LoggedLayout";
}
@section SideExtension {
	@await Html.PartialAsync("_sidebar", await SidebarService.GetSidebarModelAsync(Model.LoggedUserEntity))
}
<div class="posts-main">

	@await Html.PartialAsync("_welcome", Model.LoggedUserEntity)

	<div class="" id="posts-interests">
		<div class="row-container d-flex justify-content-evenly">
			<div class="item-holder">
				<div class="d-flex  h-75" id="today-theme-container">
					<div class="m-auto" id="today-theme">
						<div class="theme-image"><img src="/img/theme/@Model.TodayTheme.PhotoURL" alt="Alternate Text" /></div>
						<div class="theme-name-container w-100 h-100 justify-content-center d-flex">
							<p class="theme-name" style="z-index:2;">@Model.TodayTheme.Name</p>
						</div>
						<div class="theme-back"></div>
					</div>
				</div>
			</div>
			<div class="item-holder">
				<div class="item-holder-title">
					<p>Yesterday's Top Posts</p>
				</div>
				<div class="d-flex multiple-posts-container h-75" id="yesterdays-container">
					<div class="m-auto multiple-posts-top" id="yesterdays-top">
						<div class="carousel-container">
							@if (Model.PostsYesterday.Count != 0)
							{
								<div id="yesterday-posts" class="carousel slide h-100" data-bs-ride="false">
									<div class="carousel-inner h-100">
										@foreach (var note in Model.PostsYesterday)
										{
											<div class="carousel-item h-100">
												@await Html.PartialAsync("_post", note)
											</div>
										}
									</div>
									<button class="carousel-control-prev custom-carousel-control " type="button" data-bs-target="#yesterday-posts" data-bs-slide="prev">
										<span aria-hidden="true"><i class="fa-solid fa-angle-left fa-2xl"></i></span>
										<span class="visually-hidden">Previous</span>
									</button>
									<button class="carousel-control-next custom-carousel-control" type="button" data-bs-target="#yesterday-posts" data-bs-slide="next">
										<span aria-hidden="true"><i class="fa-solid fa-angle-right fa-2xl"></i></span>
										<span class="visually-hidden">Next</span>
									</button>
								</div>
							}

						</div>
						<div class="multiple-posts-bg"></div>
					</div>
				</div>
			</div>
			<div class="item-holder">
				<div class="item-holder-title">
					<p>Check Out!</p>
				</div>
				<div class="d-flex multiple-posts-container h-75" id="checkout-container">
					<div class="m-auto multiple-posts-top" id="checkout-top">
						<div class="carousel-container">
							@if (Model.PostsYesterday.Count != 0)
							{
								<div id="checkOut-posts" class="carousel slide h-100" data-bs-ride="false">
									<div class="carousel-inner h-100">
										@foreach (var note in Model.PostsCheckOut)
										{
											<div class="carousel-item h-100">
												@await Html.PartialAsync("_post", note)
											</div>
										}
									</div>
									<button class="carousel-control-prev custom-carousel-control " type="button" data-bs-target="#checkOut-posts" data-bs-slide="prev">
										<span aria-hidden="true"><i class="fa-solid fa-angle-left fa-2xl"></i></span>
										<span class="visually-hidden">Previous</span>
									</button>
									<button class="carousel-control-next custom-carousel-control" type="button" data-bs-target="#checkOut-posts" data-bs-slide="next">
										<span aria-hidden="true"><i class="fa-solid fa-angle-right fa-2xl"></i></span>
										<span class="visually-hidden">Next</span>
									</button>
								</div>
							}

						</div>
						<div class="multiple-posts-bg"></div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="" id="posts-container">
		<div id="today-posts-title" class="text-white mb-3 mt-5 text-center">TOP POSTS</div>
		<div class="row-container d-flex justify-content-evenly">
			<div class="posts-bg" id="today-posts-container">
			</div>
		</div>

	</div>
</div>

@{
	if (MessageHelpers.PostBack)
	{
		@await Html.PartialAsync("_message", MessageHelpers.TryGetMessageModel())
	}
}

@section BottomExtension {
	@await Html.PartialAsync("_bottombar", Model.LoggedUserEntity)
}
@section Scripts {
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="/js/friendship.js"></script>
	<script src="/js/Posts/posts.js"></script>
	<script src="/js/Posts/posts-index.js"></script>

}