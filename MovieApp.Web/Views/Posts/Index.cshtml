@model PostsViewModel
@inject ISidebarService SidebarService

@section Styles {
	<link rel="stylesheet" href="~/css/posts.css" />
}
@{
	Layout = "_LoggedLayout";
}
@section SideExtension {
	@await Html.PartialAsync("_sidebar", await SidebarService.GetSidebarModelAsync(Model.LoggedUserEntity))
}

<div class="posts-main">
	<div class="posts-container">
		<div class="posts-bg">
			<div class="posts-content">
				<div id="today-posts-title" class="text-white mb-3">TOP POSTS</div>
				<div id="today-posts-theme" class="text-white mb-3 text-align-center">Today's Theme: @Model.TodayThemeName</div>
				@{
					foreach (var note in Model.PostsToday)
						@await Html.PartialAsync("_post", note)
				}
			</div>
		</div>
	</div>

	<div class="posts-interests">
		<div class="posts-content">
			<div id="yesterday-posts-title" class="text-white">Yesterday's TOPS</div>
			<div id="yesterday-posts-theme" class="text-white mb-3" style="font-size:1.2rem;">Yesterday's Theme was: @Model.YesterdayThemeName</div>

			@if (Model.PostsYesterday.Count != 0)
			{
				<div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="false">
					<div class="carousel-inner">
						@foreach (var note in Model.PostsYesterday)
							{
								<div class="carousel-item">
									@await Html.PartialAsync("_post", note)
								</div>
							}
					</div>
					<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
						<span aria-hidden="true"><i class="fa-solid fa-angle-left fa-2xl" style="color: #B197FC;"></i></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
						<span aria-hidden="true"><i class="fa-solid fa-angle-right fa-2xl" style="color: #B197FC;"></i></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			}
		</div>
	</div>


</div>

@{
	if (MessageHelpers.PostBack)
	{
		@await Html.PartialAsync("_message", MessageHelpers.TryGetMessageModel())
	}
}

@section BottomExtension {
	@await Html.PartialAsync("_bottombar", Model.LoggedUserEntity)
}
@section Scripts {
	<script src="/js/Posts/posts.js"></script>
	<script src="/js/Posts/posts-index.js"></script>

}