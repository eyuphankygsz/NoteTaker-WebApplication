@model PostDetailModel

<div class="posts-card card text-center mb-3 h-100 shadow">
	<div class="card-header ">
		<a class="d-flex align-items-center" href="@Url.Action("Details", "User", new { id = Model.Username })">
			<div class="post-profile d-flex justify-content-center">
				<img class="h-100" src="/img/user/profile/@Model.UserPhoto" alt="Alternate Text" />
			</div>
			@Model.Username
		</a>
	</div>
	<div class="card-body">
		<div class="card-content">
			<h5 class="card-title">@Model.NoteTitle</h5>
			<p class="card-text">@Model.NoteContent</p>
		</div>
		<div class="card-theme">@Model.ThemeName</div>
	</div>
	<div class="card-footer d-flex justify-content-between text-body-secondary">
		<span class="rate text-white fw-bold">★ @Model.PostRate.ToString("0.00")</span>
		<span class="date text-white fw-bold">@GetTimeAgo(Model.PostDate)</span>

	</div>
</div>

@functions {
	public string GetTimeAgo(DateTime date)
	{
		TimeSpan elapsedTime = DateTime.Now - date;

		if (elapsedTime < TimeSpan.FromHours(1))
			return elapsedTime.Minutes + " Minute" + (elapsedTime.Minutes == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromHours(24))
			return elapsedTime.Hours + " Hour" + (elapsedTime.Hours == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(7))
			return elapsedTime.Days + " Day" + (elapsedTime.Days == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(28))
			return elapsedTime.Days / 7 + " Week" + (elapsedTime.Days / 7 == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(356))
			return elapsedTime.Days / 28 + " Month" + (elapsedTime.Days / 28 == 1 ? "" : "(s)") + " Ago";

		return elapsedTime.Days / 365 + " Year" + (elapsedTime.Days / 365 == 1 ? "" : "(s)") + " Ago";


	}
}