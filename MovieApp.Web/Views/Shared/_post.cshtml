@model Note

<div class="card text-center mb-3">
	<div class="card-header">
		<a href="@Url.Action("Details", "User", new { id = Model.Creator.ID })">
			<img src="/img/user/profile/@Model.Creator.Photo" alt="Alternate Text" />
			@Model.Creator.Username
		</a>
	</div>
	<div class="card-body">
		<h5 class="card-title">@Model.Title</h5>
		<p class="card-text">@Model.Content</p>
	</div>
	<div class="card-footer text-body-secondary">
		@GetTimeAgo(Model.Date)
	</div>
</div>

@functions {
	public string GetTimeAgo(DateTime date)
	{
		TimeSpan elapsedTime = DateTime.Now - date;

		if (elapsedTime < TimeSpan.FromHours(1))
			return elapsedTime.Minutes + " Minute" + (elapsedTime.Minutes == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromHours(24))
			return elapsedTime.Hours + " Hour" + (elapsedTime.Hours == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(7))
			return elapsedTime.Days + " Day" + (elapsedTime.Days == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(28))
			return elapsedTime.Days / 7 + " Week" + (elapsedTime.Days / 7 == 1 ? "" : "(s)") + " Ago";
		if (elapsedTime < TimeSpan.FromDays(356))
			return elapsedTime.Days / 28 + " Month" + (elapsedTime.Days / 28 == 1 ? "" : "(s)") + " Ago";

		return elapsedTime.Days / 365 + " Year" + (elapsedTime.Days / 365 == 1 ? "" : "(s)") + " Ago";


	}
}